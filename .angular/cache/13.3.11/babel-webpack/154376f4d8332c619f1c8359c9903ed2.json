{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Dorra\\\\ng-certification-master\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Dorra\\\\ng-certification-master\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { map } from 'rxjs';\nimport { LocationByZIP } from '../../model/locationByZIP';\nimport { WeatherDetails } from '../../model/weatherDetails';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../sharedService/shared.service\";\nexport var WeatherService = /*#__PURE__*/(function () {\n  var WeatherService = /*#__PURE__*/function () {\n    function WeatherService(http, sharedService) {\n      _classCallCheck(this, WeatherService);\n\n      this.http = http;\n      this.sharedService = sharedService;\n    } // findLocationByZipCode (zipCode: string) : Observable<LocationByZIP>{\n    //   return this.http.get(`${this.sharedService.baseUrl}/geo/1.0/zip?zip=${zipCode},US&appid=${this.sharedService.api_ID}`)\n    // }\n    // get lat and long coordinates, city name , zipcode and country from zip code\n\n\n    _createClass(WeatherService, [{\n      key: \"findLocationByZipCode\",\n      value: function findLocationByZipCode(zipCode) {\n        return this.http.get(\"\".concat(this.sharedService.baseUrl, \"/geo/1.0/zip?zip=\").concat(zipCode, \",US&appid=\").concat(this.sharedService.api_ID)).pipe(map(function (response) {\n          var location = new LocationByZIP();\n          location.country = response.country;\n          location.lat = response.lat;\n          location.lon = response.lon;\n          location.name = response.name;\n          location.zip = response.zip;\n          return location;\n        }));\n      } // get weather details from lat and lon\n\n    }, {\n      key: \"getWeatherDetails\",\n      value: function getWeatherDetails(zipcode) {\n        return this.http.get(\"\".concat(this.sharedService.baseUrl, \"/data/2.5/weather?zip=\").concat(zipcode, \"&appid=\").concat(this.sharedService.api_ID)).pipe(map(function (response) {\n          var weatherDetails = new WeatherDetails();\n          weatherDetails.nameCity = response.name;\n          weatherDetails.temp = response.main.temp;\n          weatherDetails.maxTemperature = response.main.temp_max;\n          weatherDetails.minTemperature = response.main.temp_min;\n          weatherDetails.weatherDescription = response.weather[0].description;\n          weatherDetails.mainWeatherDescription = response.weather[0].main;\n          return weatherDetails;\n        }));\n      }\n    }]);\n\n    return WeatherService;\n  }();\n\n  WeatherService.ɵfac = function WeatherService_Factory(t) {\n    return new (t || WeatherService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SharedService));\n  };\n\n  WeatherService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WeatherService,\n    factory: WeatherService.ɵfac,\n    providedIn: 'root'\n  });\n  return WeatherService;\n})();","map":null,"metadata":{},"sourceType":"module"}