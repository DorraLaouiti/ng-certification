{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Dorra\\\\ng-certification-master\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Dorra\\\\ng-certification-master\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/weatherService/weather.service\";\nexport var ForecastComponent = /*#__PURE__*/(function () {\n  var ForecastComponent = /*#__PURE__*/function () {\n    function ForecastComponent(route, weatherService) {\n      _classCallCheck(this, ForecastComponent);\n\n      this.route = route;\n      this.weatherService = weatherService;\n    }\n\n    _createClass(ForecastComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.zipCode = this.route.snapshot.paramMap.get('zipCode') || '';\n        this.getForecastData(this.zipCode);\n      }\n    }, {\n      key: \"getForecastData\",\n      value: function getForecastData(zipCode) {\n        var _this = this;\n\n        return this.weatherService.fiveDaysForecastData(zipCode).subscribe(function (data) {\n          _this.forecast = {\n            nameCity: data[0].nameCity,\n            weatherDescription: data[0].weatherDescription,\n            highTemperature: data[0].highTemperature,\n            lowTemperature: data[0].lowTemperature,\n            DayName: data[0].DayName\n          };\n        });\n      }\n    }]);\n\n    return ForecastComponent;\n  }();\n\n  ForecastComponent.ɵfac = function ForecastComponent_Factory(t) {\n    return new (t || ForecastComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.WeatherService));\n  };\n\n  ForecastComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForecastComponent,\n    selectors: [[\"app-forecast\"]],\n    decls: 2,\n    vars: 1,\n    template: function ForecastComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.forecast.DayName);\n      }\n    },\n    styles: [\"\"]\n  });\n  return ForecastComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}